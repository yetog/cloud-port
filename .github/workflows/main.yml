# .github/workflows/deploy.yml
name: Deploy Portfolio to Server

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Production Server
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build portfolio locally
      run: |
        # Setup and build apps if scripts exist
        if [ -f "scripts/setup-apps.sh" ]; then
          chmod +x scripts/setup-apps.sh
          ./scripts/setup-apps.sh
        fi
        
        if [ -f "scripts/build-apps.sh" ]; then
          chmod +x scripts/build-apps.sh
          ./scripts/build-apps.sh
        fi
        
        # Build main portfolio
        npm run build

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          set -e
          
          # Configuration
          PORTFOLIO_DIR="/var/www/zaylegend/portfolio"
          BACKUP_DIR="/var/www/zaylegend/backups"
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          
          echo "🚀 Starting deployment at $(date)"
          
          # Create backup directory
          mkdir -p "$BACKUP_DIR"
          
          # Create backup of current deployment
          if [ -d "$PORTFOLIO_DIR" ]; then
            echo "📦 Creating backup..."
            cp -r "$PORTFOLIO_DIR" "$BACKUP_DIR/portfolio-backup-$TIMESTAMP"
            echo "✅ Backup created: $BACKUP_DIR/portfolio-backup-$TIMESTAMP"
          fi
          
          # Navigate to portfolio directory
          cd "$PORTFOLIO_DIR"
          
          # Stash any local changes
          echo "💾 Stashing local changes..."
          git stash push -m "Auto-stash before deployment $TIMESTAMP" || true
          
          # Pull latest changes
          echo "⬇️  Pulling latest changes..."
          git fetch origin
          git reset --hard origin/main
          
          # Update submodules
          echo "🔄 Updating submodules..."
          git submodule update --init --recursive --remote
          
          # Install dependencies
          echo "📦 Installing dependencies..."
          npm ci --production=false
          
          # Setup and build apps
          echo "🔨 Building applications..."
          if [ -f "scripts/setup-apps.sh" ]; then
            chmod +x scripts/setup-apps.sh
            ./scripts/setup-apps.sh
          fi
          
          if [ -f "scripts/build-apps.sh" ]; then
            chmod +x scripts/build-apps.sh
            ./scripts/build-apps.sh
          fi
          
          # Build main portfolio
          echo "🏗️  Building main portfolio..."
          npm run build
          
          # Set proper permissions
          echo "🔐 Setting permissions..."
          sudo chown -R langchain:www-data /var/www/zaylegend
          sudo chmod -R 755 "$PORTFOLIO_DIR/dist"
          sudo chmod -R 755 "$PORTFOLIO_DIR/public"
          
          # Test nginx configuration
          echo "🧪 Testing nginx configuration..."
          sudo nginx -t
          
          # Reload nginx
          echo "🔄 Reloading nginx..."
          sudo systemctl reload nginx
          
          # Verify deployment
          echo "✅ Verifying deployment..."
          if curl -s -o /dev/null -w "%{http_code}" http://localhost | grep -q "200\|301\|302"; then
            echo "🎉 Deployment successful! Site is responding."
          else
            echo "❌ Warning: Site may not be responding properly"
            exit 1
          fi
          
          # Clean up old backups (keep last 5)
          echo "🧹 Cleaning up old backups..."
          cd "$BACKUP_DIR"
          ls -t | tail -n +6 | xargs -r rm -rf || true
          
          echo "🚀 Deployment completed successfully at $(date)"
          echo "🌐 Visit https://zaylegend.com to see your updated site"
          
          # Show recent commits
          echo "📝 Recent commits deployed:"
          cd "$PORTFOLIO_DIR"
          git log --oneline -3

    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Deployment completed successfully!"
        else
          echo "❌ Deployment failed!"
        fi
