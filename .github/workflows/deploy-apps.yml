name: Deploy Apps

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/**'
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.changes.outputs.apps }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
        
    - name: Detect changed apps
      id: changes
      run: |
        # Get list of changed apps
        changed_apps=$(git diff --name-only HEAD~1 HEAD | grep '^apps/' | cut -d'/' -f2 | sort -u | tr '\n' ' ')
        echo "apps=$changed_apps" >> $GITHUB_OUTPUT
        echo "Changed apps: $changed_apps"

  deploy-apps:
    needs: detect-changes
    if: needs.detect-changes.outputs.apps != ''
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJSON(needs.detect-changes.outputs.apps) }}
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'apps/${{ matrix.app }}/package-lock.json'
        
    - name: Build app
      run: |
        cd apps/${{ matrix.app }}
        npm install
        npm run build
        
    - name: Deploy app to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: 66.179.240.58
        username: langchain
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          # Create backup
          sudo cp -r /var/www/zaylegend/apps/${{ matrix.app }} /var/www/zaylegend/apps/${{ matrix.app }}-backup-$(date +%Y%m%d-%H%M%S) 2>/dev/null || true
          
          # Pull latest code
          cd /var/www/zaylegend/apps/${{ matrix.app }}
          sudo git pull origin main || sudo git pull origin master
          
          # Fix React Router configuration (add basename)
          if [ -f "src/App.tsx" ] || [ -f "src/App.jsx" ]; then
            if grep -q "BrowserRouter" src/App.*; then
              sudo sed -i "s/<BrowserRouter>/<BrowserRouter basename=\"\/${{ matrix.app }}\">/g" src/App.* || true
            fi
          fi
          
          # Build app with correct base path
          sudo npm install
          sudo npm run build
          
          # Get correct port for this app
          app_port=""
          case "${{ matrix.app }}" in
            "zen-reset") app_port="8081" ;;
            "chord-genesis") app_port="3002" ;;
            "fineline") app_port="3003" ;;
            "game-hub") app_port="3004" ;;
            "dj-visualizer") app_port="3005" ;;
            "spritegen") app_port="3006" ;;
          esac
          
          # Stop and remove existing container
          sudo docker stop ${{ matrix.app }} 2>/dev/null || true
          sudo docker rm ${{ matrix.app }} 2>/dev/null || true
          
          # Build Docker image with correct base path
          sudo docker build --build-arg VITE_BASE_PATH=/${{ matrix.app }}/ -t ${{ matrix.app }} .
          
          # Start new container
          if [ ! -z "$app_port" ]; then
            sudo docker run -d --name ${{ matrix.app }} -p $app_port:80 ${{ matrix.app }}:latest
          fi
          
          # Set proper ownership
          sudo chown -R www-data:www-data /var/www/zaylegend/apps/${{ matrix.app }}
          
          # Health check
          sleep 10
          if [ ! -z "$app_port" ]; then
            curl -f http://localhost:$app_port || echo "Warning: ${{ matrix.app }} may not be responding on port $app_port"
            curl -f https://zaylegend.com/${{ matrix.app }}/ || echo "Warning: ${{ matrix.app }} may not be accessible via nginx"
          fi
          
    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ ${{ matrix.app }} deployed successfully"
        else
          echo "❌ ${{ matrix.app }} deployment failed"
        fi